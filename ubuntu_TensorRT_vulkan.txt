

vulkan:
wget https://sdk.lunarg.com/sdk/download/1.2.189.0/linux/vulkansdk-linux-x86_64-1.2.189.0.tar.gz?Human=true -O vulkansdk-linux-x86_64-1.2.189.0.tar.gz
tar -xf vulkansdk-linux-x86_64-1.2.189.0.tar.gz


sudo gedit ~/.bashrc


export PYTHON_HOME=~/anaconda3
export CUDA_HOME=/usr/local/cuda-10.2
export PATH=${PYTHON_HOME}/bin:${CUDA_HOME}/bin:$PATH
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${CUDA_HOME}/lib64
export TENSORRT_HOME=~/TensorRT-8.0.1.6
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${TENSORRT_HOME}/lib
export PYTHON_EXECUTABLE=~/anaconda3/bin
export VULKAN_SDK=~/1.2.189.0/x86_64


source ~/.bashrc


输入命令
vulkaninfo


或者
vulkaninfo | grep deviceType


打印出信息，表示安装成功。


ncnn安装教程
https://blog.csdn.net/weixin_43541325/article/details/117412417




跑示例：
cd build
cmake -DCMAKE_BUILD_TYPE=Release -DNCNN_VULKAN=ON -DNCNN_SYSTEM_GLSLANG=ON -DNCNN_BUILD_EXAMPLES=ON ..
make -j$(nproc)

cd ../examples
../build/examples/squeezenet ../images/256-ncnn.png



cd examples
../build/examples/squeezenet ../images/000000000019.jpg


../build/examples/squeezenet ../images/dog.jpg




















win10环境搭建：

mingw-get-setup.exe安装到D://下
cmake-3.16.5-win64-x64.zip解压到D://下
// protobuf-3.4.0.zip解压到D://下
protoc-3.9.0-win64.zip解压到D://下
opencv解压到D://下


编译protobuf：
https://zhuanlan.zhihu.com/p/391609325

用vs2019打开任意一个项目，Tools -> Command Line -> Developer PowerShell 打开这个命令行工具，输入命令：
cd <protobuf-root-dir>
mkdir build_vs2019
cd build_vs2019
cmake -G"NMake Makefiles" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=%cd%/install -Dprotobuf_BUILD_TESTS=OFF -Dprotobuf_MSVC_STATIC_RUNTIME=OFF ../cmake
cmake -G"NMake Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=%cd%/install -Dprotobuf_BUILD_TESTS=OFF -Dprotobuf_MSVC_STATIC_RUNTIME=OFF ../cmake
nmake
nmake install





环境变量

CMAKE_PATH=D:\cmake-3.16.5-win64-x64
OPENCV_PATH=D:\opencv
MINGW_PATH=D:\MinGW
CMAKE_C_COMPILER=D:\MinGW\bin
CMAKE_CXX_COMPILER=D:\MinGW\bin
// PROTOBUF_PATH=D:\protobuf-3.4.0
PROTOBUF_PATH=D:\protoc-3.9.0-win64


Path后接
%CMAKE_PATH%\bin;
%PROTOBUF_PATH%\bin;
%OPENCV_PATH%\build\x64\vc15\bin;
%OPENCV_PATH%\build\include\opencv2;
%MINGW_PATH%\bin;
%CMAKE_C_COMPILER%;
%CMAKE_CXX_COMPILER%;
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.16.27023\bin\HostX64\x64;

（最后一个是nmake.exe的路径，自己找一下并修改）


编译ncnn
mkdir -p build
cd build
cmake -G"NMake Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=%cd%/install -DProtobuf_INCLUDE_DIR=D://protoc-3.9.0-win64/include -DProtobuf_LIBRARIES=D://protoc-3.9.0-win64/lib/libprotobuf.lib -DProtobuf_PROTOC_EXECUTABLE=D://protoc-3.9.0-win64/bin/protoc.exe -DNCNN_VULKAN=ON ..
nmake
nmake install


------------------------



cmake -G"NMake Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=%cd%/install -DProtobuf_INCLUDE_DIR=D:/protobuf-3.4.0/build_vs2019/install/include -DProtobuf_LIBRARIES=D:/protobuf-3.4.0/build_vs2019/install/lib/libprotobuf.lib -DProtobuf_PROTOC_EXECUTABLE=D:/protobuf-3.4.0/build_vs2019/install/bin/protoc.exe -DNCNN_VULKAN=OFF ..





cmake -G"NMake Makefiles" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=%cd%/install -DProtobuf_INCLUDE_DIR=D:/protobuf-3.4.0/build_vs2019/install/include -DProtobuf_LIBRARIES=D:/protobuf-3.4.0/build_vs2019/install/lib/libprotobufd.lib -DProtobuf_PROTOC_EXECUTABLE=D:/protobuf-3.4.0/build_vs2019/install/bin/protoc.exe -DNCNN_VULKAN=OFF -DOpenCV_DIR=D:/opencv/build ..
​
cmake -G"NMake Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=%cd%/install -DProtobuf_INCLUDE_DIR=D:/protobuf-3.4.0/build_vs2019/install/include -DProtobuf_LIBRARIES=D:/protobuf-3.4.0/build_vs2019/install/lib/libprotobuf.lib -DProtobuf_PROTOC_EXECUTABLE=D:/protobuf-3.4.0/build_vs2019/install/bin/protoc.exe -DNCNN_VULKAN=OFF -DOpenCV_DIR=D:/opencv/build ..
​







cmake -G"NMake Makefiles" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=%cd%/install -DProtobuf_INCLUDE_DIR=D:/protobuf-3.4.0/build_vs2019/install/include -DProtobuf_LIBRARIES=D:/protobuf-3.4.0/build_vs2019/install/lib/libprotobufd.lib -DProtobuf_PROTOC_EXECUTABLE=D:/protobuf-3.4.0/build_vs2019/install/bin/protoc.exe -DNCNN_VULKAN=ON -DOpenCV_DIR=D:/opencv/build ..
​
cmake -G"NMake Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=%cd%/install -DProtobuf_INCLUDE_DIR=D:/protobuf-3.4.0/build_vs2019/install/include -DProtobuf_LIBRARIES=D:/protobuf-3.4.0/build_vs2019/install/lib/libprotobuf.lib -DProtobuf_PROTOC_EXECUTABLE=D:/protobuf-3.4.0/build_vs2019/install/bin/protoc.exe -DNCNN_VULKAN=ON -DOpenCV_DIR=D:/opencv/build ..
​
nmake
nmake install








